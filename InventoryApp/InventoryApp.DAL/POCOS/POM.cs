//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace InventoryApp.DAL.POCOS
{
    public partial class POM
    {
        #region Primitive Properties
    
        public virtual long UNID_POM
        {
            get;
            set;
        }
    
        public virtual System.DateTime FECHA_POM
        {
            get;
            set;
        }
    
        public virtual long UNID_COTIZACION
        {
            get { return _uNID_COTIZACION; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_uNID_COTIZACION != value)
                    {
                        if (COTIZACION != null && COTIZACION.UNID_COTIZACION != value)
                        {
                            COTIZACION = null;
                        }
                        _uNID_COTIZACION = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private long _uNID_COTIZACION;
    
        public virtual Nullable<int> DIAS_ENTREGA
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> FECHA_ENTREGA
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> FECHA_ENTREGA_REAL
        {
            get;
            set;
        }
    
        public virtual Nullable<long> UNID_EMPRESA
        {
            get { return _uNID_EMPRESA; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_uNID_EMPRESA != value)
                    {
                        if (EMPRESA != null && EMPRESA.UNID_EMPRESA != value)
                        {
                            EMPRESA = null;
                        }
                        _uNID_EMPRESA = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<long> _uNID_EMPRESA;
    
        public virtual bool IS_ACTIVE
        {
            get;
            set;
        }
    
        public virtual bool IS_MODIFIED
        {
            get;
            set;
        }
    
        public virtual long LAST_MODIFIED_DATE
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<MASTER_INVENTARIOS> MASTER_INVENTARIOS
        {
            get
            {
                if (_mASTER_INVENTARIOS == null)
                {
                    var newCollection = new FixupCollection<MASTER_INVENTARIOS>();
                    newCollection.CollectionChanged += FixupMASTER_INVENTARIOS;
                    _mASTER_INVENTARIOS = newCollection;
                }
                return _mASTER_INVENTARIOS;
            }
            set
            {
                if (!ReferenceEquals(_mASTER_INVENTARIOS, value))
                {
                    var previousValue = _mASTER_INVENTARIOS as FixupCollection<MASTER_INVENTARIOS>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupMASTER_INVENTARIOS;
                    }
                    _mASTER_INVENTARIOS = value;
                    var newValue = value as FixupCollection<MASTER_INVENTARIOS>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupMASTER_INVENTARIOS;
                    }
                }
            }
        }
        private ICollection<MASTER_INVENTARIOS> _mASTER_INVENTARIOS;
    
        public virtual EMPRESA EMPRESA
        {
            get { return _eMPRESA; }
            set
            {
                if (!ReferenceEquals(_eMPRESA, value))
                {
                    var previousValue = _eMPRESA;
                    _eMPRESA = value;
                    FixupEMPRESA(previousValue);
                }
            }
        }
        private EMPRESA _eMPRESA;
    
        public virtual COTIZACION COTIZACION
        {
            get { return _cOTIZACION; }
            set
            {
                if (!ReferenceEquals(_cOTIZACION, value))
                {
                    var previousValue = _cOTIZACION;
                    _cOTIZACION = value;
                    FixupCOTIZACION(previousValue);
                }
            }
        }
        private COTIZACION _cOTIZACION;
    
        public virtual ICollection<POM_ARTICULO> POM_ARTICULO
        {
            get
            {
                if (_pOM_ARTICULO == null)
                {
                    var newCollection = new FixupCollection<POM_ARTICULO>();
                    newCollection.CollectionChanged += FixupPOM_ARTICULO;
                    _pOM_ARTICULO = newCollection;
                }
                return _pOM_ARTICULO;
            }
            set
            {
                if (!ReferenceEquals(_pOM_ARTICULO, value))
                {
                    var previousValue = _pOM_ARTICULO as FixupCollection<POM_ARTICULO>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupPOM_ARTICULO;
                    }
                    _pOM_ARTICULO = value;
                    var newValue = value as FixupCollection<POM_ARTICULO>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupPOM_ARTICULO;
                    }
                }
            }
        }
        private ICollection<POM_ARTICULO> _pOM_ARTICULO;

        #endregion
        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupEMPRESA(EMPRESA previousValue)
        {
            if (previousValue != null && previousValue.POMs.Contains(this))
            {
                previousValue.POMs.Remove(this);
            }
    
            if (EMPRESA != null)
            {
                if (!EMPRESA.POMs.Contains(this))
                {
                    EMPRESA.POMs.Add(this);
                }
                if (UNID_EMPRESA != EMPRESA.UNID_EMPRESA)
                {
                    UNID_EMPRESA = EMPRESA.UNID_EMPRESA;
                }
            }
            else if (!_settingFK)
            {
                UNID_EMPRESA = null;
            }
        }
    
        private void FixupCOTIZACION(COTIZACION previousValue)
        {
            if (previousValue != null && previousValue.POMs.Contains(this))
            {
                previousValue.POMs.Remove(this);
            }
    
            if (COTIZACION != null)
            {
                if (!COTIZACION.POMs.Contains(this))
                {
                    COTIZACION.POMs.Add(this);
                }
                if (UNID_COTIZACION != COTIZACION.UNID_COTIZACION)
                {
                    UNID_COTIZACION = COTIZACION.UNID_COTIZACION;
                }
            }
        }
    
        private void FixupMASTER_INVENTARIOS(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (MASTER_INVENTARIOS item in e.NewItems)
                {
                    item.POM = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (MASTER_INVENTARIOS item in e.OldItems)
                {
                    if (ReferenceEquals(item.POM, this))
                    {
                        item.POM = null;
                    }
                }
            }
        }
    
        private void FixupPOM_ARTICULO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (POM_ARTICULO item in e.NewItems)
                {
                    item.POM = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (POM_ARTICULO item in e.OldItems)
                {
                    if (ReferenceEquals(item.POM, this))
                    {
                        item.POM = null;
                    }
                }
            }
        }

        #endregion
    }
}
