//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace InventoryApp.DAL.POCOS
{
    public partial class POM_ARTICULO
    {
        #region Primitive Properties
    
        public virtual long UNID_POM
        {
            get { return _uNID_POM; }
            set
            {
                if (_uNID_POM != value)
                {
                    if (POM != null && POM.UNID_POM != value)
                    {
                        POM = null;
                    }
                    _uNID_POM = value;
                }
            }
        }
        private long _uNID_POM;
    
        public virtual long UNID_POM_ARTICULO
        {
            get;
            set;
        }
    
        public virtual long UNID_ARTICULO
        {
            get { return _uNID_ARTICULO; }
            set
            {
                if (_uNID_ARTICULO != value)
                {
                    if (ARTICULO != null && ARTICULO.UNID_ARTICULO != value)
                    {
                        ARTICULO = null;
                    }
                    _uNID_ARTICULO = value;
                }
            }
        }
        private long _uNID_ARTICULO;
    
        public virtual Nullable<int> CANTIDAD
        {
            get;
            set;
        }
    
        public virtual Nullable<double> COSTO_UNITARIO
        {
            get;
            set;
        }
    
        public virtual Nullable<double> IVA
        {
            get;
            set;
        }
    
        public virtual Nullable<int> TC
        {
            get;
            set;
        }
    
        public virtual Nullable<double> DESCUENTO
        {
            get;
            set;
        }
    
        public virtual bool IS_ACTIVE
        {
            get;
            set;
        }
    
        public virtual bool IS_MODIFIED
        {
            get;
            set;
        }
    
        public virtual long LAST_MODIFIED_DATE
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<MASTER_INVENTARIOS> MASTER_INVENTARIOS
        {
            get
            {
                if (_mASTER_INVENTARIOS == null)
                {
                    var newCollection = new FixupCollection<MASTER_INVENTARIOS>();
                    newCollection.CollectionChanged += FixupMASTER_INVENTARIOS;
                    _mASTER_INVENTARIOS = newCollection;
                }
                return _mASTER_INVENTARIOS;
            }
            set
            {
                if (!ReferenceEquals(_mASTER_INVENTARIOS, value))
                {
                    var previousValue = _mASTER_INVENTARIOS as FixupCollection<MASTER_INVENTARIOS>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupMASTER_INVENTARIOS;
                    }
                    _mASTER_INVENTARIOS = value;
                    var newValue = value as FixupCollection<MASTER_INVENTARIOS>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupMASTER_INVENTARIOS;
                    }
                }
            }
        }
        private ICollection<MASTER_INVENTARIOS> _mASTER_INVENTARIOS;
    
        public virtual ARTICULO ARTICULO
        {
            get { return _aRTICULO; }
            set
            {
                if (!ReferenceEquals(_aRTICULO, value))
                {
                    var previousValue = _aRTICULO;
                    _aRTICULO = value;
                    FixupARTICULO(previousValue);
                }
            }
        }
        private ARTICULO _aRTICULO;
    
        public virtual POM POM
        {
            get { return _pOM; }
            set
            {
                if (!ReferenceEquals(_pOM, value))
                {
                    var previousValue = _pOM;
                    _pOM = value;
                    FixupPOM(previousValue);
                }
            }
        }
        private POM _pOM;

        #endregion
        #region Association Fixup
    
        private void FixupARTICULO(ARTICULO previousValue)
        {
            if (previousValue != null && previousValue.POM_ARTICULO.Contains(this))
            {
                previousValue.POM_ARTICULO.Remove(this);
            }
    
            if (ARTICULO != null)
            {
                if (!ARTICULO.POM_ARTICULO.Contains(this))
                {
                    ARTICULO.POM_ARTICULO.Add(this);
                }
                if (UNID_ARTICULO != ARTICULO.UNID_ARTICULO)
                {
                    UNID_ARTICULO = ARTICULO.UNID_ARTICULO;
                }
            }
        }
    
        private void FixupPOM(POM previousValue)
        {
            if (previousValue != null && previousValue.POM_ARTICULO.Contains(this))
            {
                previousValue.POM_ARTICULO.Remove(this);
            }
    
            if (POM != null)
            {
                if (!POM.POM_ARTICULO.Contains(this))
                {
                    POM.POM_ARTICULO.Add(this);
                }
                if (UNID_POM != POM.UNID_POM)
                {
                    UNID_POM = POM.UNID_POM;
                }
            }
        }
    
        private void FixupMASTER_INVENTARIOS(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (MASTER_INVENTARIOS item in e.NewItems)
                {
                    item.POM_ARTICULO = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (MASTER_INVENTARIOS item in e.OldItems)
                {
                    if (ReferenceEquals(item.POM_ARTICULO, this))
                    {
                        item.POM_ARTICULO = null;
                    }
                }
            }
        }

        #endregion
    }
}
