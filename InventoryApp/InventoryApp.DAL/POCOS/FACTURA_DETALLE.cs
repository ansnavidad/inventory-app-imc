//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace InventoryApp.DAL.POCOS
{
    public partial class FACTURA_DETALLE
    {
        #region Primitive Properties
    
        public virtual long UNID_FACTURA_DETALE
        {
            get;
            set;
        }
    
        public virtual long UNID_FACTURA
        {
            get { return _uNID_FACTURA; }
            set
            {
                if (_uNID_FACTURA != value)
                {
                    if (FACTURA != null && FACTURA.UNID_FACTURA != value)
                    {
                        FACTURA = null;
                    }
                    _uNID_FACTURA = value;
                }
            }
        }
        private long _uNID_FACTURA;
    
        public virtual long UNID_ARTICULO
        {
            get { return _uNID_ARTICULO; }
            set
            {
                if (_uNID_ARTICULO != value)
                {
                    if (ARTICULO != null && ARTICULO.UNID_ARTICULO != value)
                    {
                        ARTICULO = null;
                    }
                    _uNID_ARTICULO = value;
                }
            }
        }
        private long _uNID_ARTICULO;
    
        public virtual int CANTIDAD
        {
            get;
            set;
        }
    
        public virtual double PRECIO_UNITARIO
        {
            get;
            set;
        }
    
        public virtual double IMPUESTO_UNITARIO
        {
            get;
            set;
        }
    
        public virtual string NUMERO
        {
            get;
            set;
        }
    
        public virtual string DESCRIPCION
        {
            get;
            set;
        }
    
        public virtual long UNID_UNIDAD
        {
            get { return _uNID_UNIDAD; }
            set
            {
                if (_uNID_UNIDAD != value)
                {
                    if (UNIDAD != null && UNIDAD.UNID_UNIDAD != value)
                    {
                        UNIDAD = null;
                    }
                    _uNID_UNIDAD = value;
                }
            }
        }
        private long _uNID_UNIDAD;
    
        public virtual bool IS_ACTIVE
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ARTICULO ARTICULO
        {
            get { return _aRTICULO; }
            set
            {
                if (!ReferenceEquals(_aRTICULO, value))
                {
                    var previousValue = _aRTICULO;
                    _aRTICULO = value;
                    FixupARTICULO(previousValue);
                }
            }
        }
        private ARTICULO _aRTICULO;
    
        public virtual UNIDAD UNIDAD
        {
            get { return _uNIDAD; }
            set
            {
                if (!ReferenceEquals(_uNIDAD, value))
                {
                    var previousValue = _uNIDAD;
                    _uNIDAD = value;
                    FixupUNIDAD(previousValue);
                }
            }
        }
        private UNIDAD _uNIDAD;
    
        public virtual ICollection<ITEM> ITEMs
        {
            get
            {
                if (_iTEMs == null)
                {
                    var newCollection = new FixupCollection<ITEM>();
                    newCollection.CollectionChanged += FixupITEMs;
                    _iTEMs = newCollection;
                }
                return _iTEMs;
            }
            set
            {
                if (!ReferenceEquals(_iTEMs, value))
                {
                    var previousValue = _iTEMs as FixupCollection<ITEM>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupITEMs;
                    }
                    _iTEMs = value;
                    var newValue = value as FixupCollection<ITEM>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupITEMs;
                    }
                }
            }
        }
        private ICollection<ITEM> _iTEMs;
    
        public virtual FACTURA FACTURA
        {
            get { return _fACTURA; }
            set
            {
                if (!ReferenceEquals(_fACTURA, value))
                {
                    var previousValue = _fACTURA;
                    _fACTURA = value;
                    FixupFACTURA(previousValue);
                }
            }
        }
        private FACTURA _fACTURA;

        #endregion
        #region Association Fixup
    
        private void FixupARTICULO(ARTICULO previousValue)
        {
            if (previousValue != null && previousValue.FACTURA_DETALLE.Contains(this))
            {
                previousValue.FACTURA_DETALLE.Remove(this);
            }
    
            if (ARTICULO != null)
            {
                if (!ARTICULO.FACTURA_DETALLE.Contains(this))
                {
                    ARTICULO.FACTURA_DETALLE.Add(this);
                }
                if (UNID_ARTICULO != ARTICULO.UNID_ARTICULO)
                {
                    UNID_ARTICULO = ARTICULO.UNID_ARTICULO;
                }
            }
        }
    
        private void FixupUNIDAD(UNIDAD previousValue)
        {
            if (previousValue != null && previousValue.FACTURA_DETALLE.Contains(this))
            {
                previousValue.FACTURA_DETALLE.Remove(this);
            }
    
            if (UNIDAD != null)
            {
                if (!UNIDAD.FACTURA_DETALLE.Contains(this))
                {
                    UNIDAD.FACTURA_DETALLE.Add(this);
                }
                if (UNID_UNIDAD != UNIDAD.UNID_UNIDAD)
                {
                    UNID_UNIDAD = UNIDAD.UNID_UNIDAD;
                }
            }
        }
    
        private void FixupFACTURA(FACTURA previousValue)
        {
            if (previousValue != null && previousValue.FACTURA_DETALLE.Contains(this))
            {
                previousValue.FACTURA_DETALLE.Remove(this);
            }
    
            if (FACTURA != null)
            {
                if (!FACTURA.FACTURA_DETALLE.Contains(this))
                {
                    FACTURA.FACTURA_DETALLE.Add(this);
                }
                if (UNID_FACTURA != FACTURA.UNID_FACTURA)
                {
                    UNID_FACTURA = FACTURA.UNID_FACTURA;
                }
            }
        }
    
        private void FixupITEMs(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ITEM item in e.NewItems)
                {
                    item.FACTURA_DETALLE = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ITEM item in e.OldItems)
                {
                    if (ReferenceEquals(item.FACTURA_DETALLE, this))
                    {
                        item.FACTURA_DETALLE = null;
                    }
                }
            }
        }

        #endregion
    }
}
