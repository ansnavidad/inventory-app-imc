//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace InventoryApp.DAL.POCOS
{
    public partial class MENU
    {
        #region Primitive Properties
    
        public virtual long UNID_MENU
        {
            get { return _uNID_MENU; }
            set
            {
                if (_uNID_MENU != value)
                {
                    if (MENU2 != null && MENU2.UNID_MENU != value)
                    {
                        MENU2 = null;
                    }
                    _uNID_MENU = value;
                }
            }
        }
        private long _uNID_MENU;
    
        public virtual Nullable<long> UNID_MENU_PARENT
        {
            get;
            set;
        }
    
        public virtual string MENU_NAME
        {
            get;
            set;
        }
    
        public virtual bool IS_LEAF
        {
            get;
            set;
        }
    
        public virtual bool IS_MODIFIED
        {
            get;
            set;
        }
    
        public virtual long LAST_MODIFIED_DATE
        {
            get;
            set;
        }
    
        public virtual bool IS_ACTIVE
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<MASTER_INVENTARIOS> MASTER_INVENTARIOS
        {
            get
            {
                if (_mASTER_INVENTARIOS == null)
                {
                    var newCollection = new FixupCollection<MASTER_INVENTARIOS>();
                    newCollection.CollectionChanged += FixupMASTER_INVENTARIOS;
                    _mASTER_INVENTARIOS = newCollection;
                }
                return _mASTER_INVENTARIOS;
            }
            set
            {
                if (!ReferenceEquals(_mASTER_INVENTARIOS, value))
                {
                    var previousValue = _mASTER_INVENTARIOS as FixupCollection<MASTER_INVENTARIOS>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupMASTER_INVENTARIOS;
                    }
                    _mASTER_INVENTARIOS = value;
                    var newValue = value as FixupCollection<MASTER_INVENTARIOS>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupMASTER_INVENTARIOS;
                    }
                }
            }
        }
        private ICollection<MASTER_INVENTARIOS> _mASTER_INVENTARIOS;
    
        public virtual ICollection<ROL_MENU> ROL_MENU
        {
            get
            {
                if (_rOL_MENU == null)
                {
                    var newCollection = new FixupCollection<ROL_MENU>();
                    newCollection.CollectionChanged += FixupROL_MENU;
                    _rOL_MENU = newCollection;
                }
                return _rOL_MENU;
            }
            set
            {
                if (!ReferenceEquals(_rOL_MENU, value))
                {
                    var previousValue = _rOL_MENU as FixupCollection<ROL_MENU>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupROL_MENU;
                    }
                    _rOL_MENU = value;
                    var newValue = value as FixupCollection<ROL_MENU>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupROL_MENU;
                    }
                }
            }
        }
        private ICollection<ROL_MENU> _rOL_MENU;
    
        public virtual MENU MENU1
        {
            get { return _mENU1; }
            set
            {
                if (!ReferenceEquals(_mENU1, value))
                {
                    var previousValue = _mENU1;
                    _mENU1 = value;
                    FixupMENU1(previousValue);
                }
            }
        }
        private MENU _mENU1;
    
        public virtual MENU MENU2
        {
            get { return _mENU2; }
            set
            {
                if (!ReferenceEquals(_mENU2, value))
                {
                    var previousValue = _mENU2;
                    _mENU2 = value;
                    FixupMENU2(previousValue);
                }
            }
        }
        private MENU _mENU2;

        #endregion
        #region Association Fixup
    
        private void FixupMENU1(MENU previousValue)
        {
            if (previousValue != null && ReferenceEquals(previousValue.MENU2, this))
            {
                previousValue.MENU2 = null;
            }
    
            if (MENU1 != null)
            {
                MENU1.MENU2 = this;
            }
        }
    
        private void FixupMENU2(MENU previousValue)
        {
            if (previousValue != null && ReferenceEquals(previousValue.MENU1, this))
            {
                previousValue.MENU1 = null;
            }
    
            if (MENU2 != null)
            {
                MENU2.MENU1 = this;
                if (UNID_MENU != MENU2.UNID_MENU)
                {
                    UNID_MENU = MENU2.UNID_MENU;
                }
            }
        }
    
        private void FixupMASTER_INVENTARIOS(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (MASTER_INVENTARIOS item in e.NewItems)
                {
                    item.MENU = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (MASTER_INVENTARIOS item in e.OldItems)
                {
                    if (ReferenceEquals(item.MENU, this))
                    {
                        item.MENU = null;
                    }
                }
            }
        }
    
        private void FixupROL_MENU(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ROL_MENU item in e.NewItems)
                {
                    item.MENU = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ROL_MENU item in e.OldItems)
                {
                    if (ReferenceEquals(item.MENU, this))
                    {
                        item.MENU = null;
                    }
                }
            }
        }

        #endregion
    }
}
