//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace InventoryApp.DAL.POCOS
{
    public partial class MOVIMIENTO_DETALLE
    {
        #region Primitive Properties
    
        public virtual long UNID_MOVIMIENTO_DETALLE
        {
            get;
            set;
        }
    
        public virtual long UNID_ITEM
        {
            get { return _uNID_ITEM; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_uNID_ITEM != value)
                    {
                        if (ITEM != null && ITEM.UNID_ITEM != value)
                        {
                            ITEM = null;
                        }
                        _uNID_ITEM = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private long _uNID_ITEM;
    
        public virtual long UNID_MOVIMIENTO
        {
            get { return _uNID_MOVIMIENTO; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_uNID_MOVIMIENTO != value)
                    {
                        if (MOVIMENTO != null && MOVIMENTO.UNID_MOVIMIENTO != value)
                        {
                            MOVIMENTO = null;
                        }
                        _uNID_MOVIMIENTO = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private long _uNID_MOVIMIENTO;
    
        public virtual bool IS_ACTIVE
        {
            get;
            set;
        }
    
        public virtual string OBSERVACIONES
        {
            get;
            set;
        }
    
        public virtual bool IS_MODIFIED
        {
            get;
            set;
        }
    
        public virtual long LAST_MODIFIED_DATE
        {
            get;
            set;
        }
    
        public virtual int CANTIDAD
        {
            get;
            set;
        }
    
        public virtual Nullable<long> UNID_ITEM_STATUS
        {
            get { return _uNID_ITEM_STATUS; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_uNID_ITEM_STATUS != value)
                    {
                        if (ITEM_STATUS != null && ITEM_STATUS.UNID_ITEM_STATUS != value)
                        {
                            ITEM_STATUS = null;
                        }
                        _uNID_ITEM_STATUS = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<long> _uNID_ITEM_STATUS;

        #endregion
        #region Navigation Properties
    
        public virtual ITEM_STATUS ITEM_STATUS
        {
            get { return _iTEM_STATUS; }
            set
            {
                if (!ReferenceEquals(_iTEM_STATUS, value))
                {
                    var previousValue = _iTEM_STATUS;
                    _iTEM_STATUS = value;
                    FixupITEM_STATUS(previousValue);
                }
            }
        }
        private ITEM_STATUS _iTEM_STATUS;
    
        public virtual ITEM ITEM
        {
            get { return _iTEM; }
            set
            {
                if (!ReferenceEquals(_iTEM, value))
                {
                    var previousValue = _iTEM;
                    _iTEM = value;
                    FixupITEM(previousValue);
                }
            }
        }
        private ITEM _iTEM;
    
        public virtual MOVIMENTO MOVIMENTO
        {
            get { return _mOVIMENTO; }
            set
            {
                if (!ReferenceEquals(_mOVIMENTO, value))
                {
                    var previousValue = _mOVIMENTO;
                    _mOVIMENTO = value;
                    FixupMOVIMENTO(previousValue);
                }
            }
        }
        private MOVIMENTO _mOVIMENTO;
    
        public virtual ICollection<ULTIMO_MOVIMIENTO> ULTIMO_MOVIMIENTO
        {
            get
            {
                if (_uLTIMO_MOVIMIENTO == null)
                {
                    var newCollection = new FixupCollection<ULTIMO_MOVIMIENTO>();
                    newCollection.CollectionChanged += FixupULTIMO_MOVIMIENTO;
                    _uLTIMO_MOVIMIENTO = newCollection;
                }
                return _uLTIMO_MOVIMIENTO;
            }
            set
            {
                if (!ReferenceEquals(_uLTIMO_MOVIMIENTO, value))
                {
                    var previousValue = _uLTIMO_MOVIMIENTO as FixupCollection<ULTIMO_MOVIMIENTO>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupULTIMO_MOVIMIENTO;
                    }
                    _uLTIMO_MOVIMIENTO = value;
                    var newValue = value as FixupCollection<ULTIMO_MOVIMIENTO>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupULTIMO_MOVIMIENTO;
                    }
                }
            }
        }
        private ICollection<ULTIMO_MOVIMIENTO> _uLTIMO_MOVIMIENTO;

        #endregion
        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupITEM_STATUS(ITEM_STATUS previousValue)
        {
            if (previousValue != null && previousValue.MOVIMIENTO_DETALLE.Contains(this))
            {
                previousValue.MOVIMIENTO_DETALLE.Remove(this);
            }
    
            if (ITEM_STATUS != null)
            {
                if (!ITEM_STATUS.MOVIMIENTO_DETALLE.Contains(this))
                {
                    ITEM_STATUS.MOVIMIENTO_DETALLE.Add(this);
                }
                if (UNID_ITEM_STATUS != ITEM_STATUS.UNID_ITEM_STATUS)
                {
                    UNID_ITEM_STATUS = ITEM_STATUS.UNID_ITEM_STATUS;
                }
            }
            else if (!_settingFK)
            {
                UNID_ITEM_STATUS = null;
            }
        }
    
        private void FixupITEM(ITEM previousValue)
        {
            if (previousValue != null && previousValue.MOVIMIENTO_DETALLE.Contains(this))
            {
                previousValue.MOVIMIENTO_DETALLE.Remove(this);
            }
    
            if (ITEM != null)
            {
                if (!ITEM.MOVIMIENTO_DETALLE.Contains(this))
                {
                    ITEM.MOVIMIENTO_DETALLE.Add(this);
                }
                if (UNID_ITEM != ITEM.UNID_ITEM)
                {
                    UNID_ITEM = ITEM.UNID_ITEM;
                }
            }
        }
    
        private void FixupMOVIMENTO(MOVIMENTO previousValue)
        {
            if (previousValue != null && previousValue.MOVIMIENTO_DETALLE.Contains(this))
            {
                previousValue.MOVIMIENTO_DETALLE.Remove(this);
            }
    
            if (MOVIMENTO != null)
            {
                if (!MOVIMENTO.MOVIMIENTO_DETALLE.Contains(this))
                {
                    MOVIMENTO.MOVIMIENTO_DETALLE.Add(this);
                }
                if (UNID_MOVIMIENTO != MOVIMENTO.UNID_MOVIMIENTO)
                {
                    UNID_MOVIMIENTO = MOVIMENTO.UNID_MOVIMIENTO;
                }
            }
        }
    
        private void FixupULTIMO_MOVIMIENTO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ULTIMO_MOVIMIENTO item in e.NewItems)
                {
                    item.MOVIMIENTO_DETALLE = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ULTIMO_MOVIMIENTO item in e.OldItems)
                {
                    if (ReferenceEquals(item.MOVIMIENTO_DETALLE, this))
                    {
                        item.MOVIMIENTO_DETALLE = null;
                    }
                }
            }
        }

        #endregion
    }
}
