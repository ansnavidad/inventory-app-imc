//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace InventoryApp.DAL.POCOS
{
    public partial class USUARIO
    {
        #region Primitive Properties
    
        public virtual long UNID_USUARIO
        {
            get;
            set;
        }
    
        public virtual string USUARIO_MAIL
        {
            get;
            set;
        }
    
        public virtual string USUARIO_PWD
        {
            get;
            set;
        }
    
        public virtual bool IS_MODIFIED
        {
            get;
            set;
        }
    
        public virtual long LAST_MODIFIED_DATE
        {
            get;
            set;
        }
    
        public virtual bool IS_ACTIVE
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<USUARIO_ROL> USUARIO_ROL
        {
            get
            {
                if (_uSUARIO_ROL == null)
                {
                    var newCollection = new FixupCollection<USUARIO_ROL>();
                    newCollection.CollectionChanged += FixupUSUARIO_ROL;
                    _uSUARIO_ROL = newCollection;
                }
                return _uSUARIO_ROL;
            }
            set
            {
                if (!ReferenceEquals(_uSUARIO_ROL, value))
                {
                    var previousValue = _uSUARIO_ROL as FixupCollection<USUARIO_ROL>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupUSUARIO_ROL;
                    }
                    _uSUARIO_ROL = value;
                    var newValue = value as FixupCollection<USUARIO_ROL>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupUSUARIO_ROL;
                    }
                }
            }
        }
        private ICollection<USUARIO_ROL> _uSUARIO_ROL;
    
        public virtual ICollection<UPLOAD_LOG> UPLOAD_LOG
        {
            get
            {
                if (_uPLOAD_LOG == null)
                {
                    var newCollection = new FixupCollection<UPLOAD_LOG>();
                    newCollection.CollectionChanged += FixupUPLOAD_LOG;
                    _uPLOAD_LOG = newCollection;
                }
                return _uPLOAD_LOG;
            }
            set
            {
                if (!ReferenceEquals(_uPLOAD_LOG, value))
                {
                    var previousValue = _uPLOAD_LOG as FixupCollection<UPLOAD_LOG>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupUPLOAD_LOG;
                    }
                    _uPLOAD_LOG = value;
                    var newValue = value as FixupCollection<UPLOAD_LOG>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupUPLOAD_LOG;
                    }
                }
            }
        }
        private ICollection<UPLOAD_LOG> _uPLOAD_LOG;

        #endregion
        #region Association Fixup
    
        private void FixupUSUARIO_ROL(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (USUARIO_ROL item in e.NewItems)
                {
                    item.USUARIO = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (USUARIO_ROL item in e.OldItems)
                {
                    if (ReferenceEquals(item.USUARIO, this))
                    {
                        item.USUARIO = null;
                    }
                }
            }
        }
    
        private void FixupUPLOAD_LOG(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (UPLOAD_LOG item in e.NewItems)
                {
                    item.USUARIO = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (UPLOAD_LOG item in e.OldItems)
                {
                    if (ReferenceEquals(item.USUARIO, this))
                    {
                        item.USUARIO = null;
                    }
                }
            }
        }

        #endregion
    }
}
